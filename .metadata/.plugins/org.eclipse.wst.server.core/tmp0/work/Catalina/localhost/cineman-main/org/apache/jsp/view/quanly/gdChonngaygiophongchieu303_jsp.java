/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-05 14:58:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.quanly;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import dao.PhongChieuDao303;
import model.PhongChieu303;
import java.sql.Date;
import java.sql.Time;

public final class gdChonngaygiophongchieu303_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.sql.Time");
    _jspx_imports_classes.add("dao.PhongChieuDao303");
    _jspx_imports_classes.add("model.PhongChieu303");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Chọn ngày, giờ và phòng chiếu</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/chonngaygiophongchieu303.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>Chọn ngày, giờ và phòng chiếu</h2>\r\n");
      out.write("    <form method=\"post\">\r\n");
      out.write("        <label for=\"ngayChieu\">Ngày chiếu:</label>\r\n");
      out.write("        <input type=\"date\" id=\"ngayChieu\" name=\"ngayChieu\" required><br><br>\r\n");
      out.write("        <label for=\"gioChieu\">Giờ chiếu:</label>\r\n");
      out.write("        <input type=\"time\" id=\"gioChieu\" name=\"gioChieu\" required><br><br>\r\n");
      out.write("        <button type=\"submit\">Tìm phòng chiếu trống</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    ");

        String ngayChieuStr = request.getParameter("ngayChieu");
        String gioChieuStr = request.getParameter("gioChieu");
        if (ngayChieuStr != null && gioChieuStr != null && !ngayChieuStr.isEmpty() && !gioChieuStr.isEmpty()) {
            Date ngayChieu = Date.valueOf(ngayChieuStr);
            Time gioChieu = Time.valueOf(gioChieuStr + ":00"); // Thêm giây vào thời gian

            PhongChieuDao303 phongChieuDao = new PhongChieuDao303();
            List<PhongChieu303> danhSachPhongChieu = phongChieuDao.timPhongChieuTrong(ngayChieu, gioChieu);

            if (danhSachPhongChieu != null && !danhSachPhongChieu.isEmpty()) {
    
      out.write("\r\n");
      out.write("                <form action=\"gdChonphim303.jsp\" method=\"post\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"ngayChieu\" value=\"");
      out.print( ngayChieu );
      out.write("\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"gioChieu\" value=\"");
      out.print( gioChieu );
      out.write("\">\r\n");
      out.write("                    <label for=\"phongChieu\">Chọn phòng chiếu:</label>\r\n");
      out.write("                    <select id=\"phongChieu\" name=\"phongChieu\" required>\r\n");
      out.write("                        ");

                            for (PhongChieu303 phongChieu : danhSachPhongChieu) {
                        
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( phongChieu.getId() );
      out.write('"');
      out.write('>');
      out.print( phongChieu.getTenPhong() );
      out.write("</option>\r\n");
      out.write("                        ");

                            }
                        
      out.write("\r\n");
      out.write("                    </select><br><br>\r\n");
      out.write("                    <button type=\"submit\">Tiếp tục</button>\r\n");
      out.write("                </form>\r\n");
      out.write("    ");

            } else {
    
      out.write("\r\n");
      out.write("                <p>Không có phòng chiếu trống vào thời gian này.</p>\r\n");
      out.write("    ");

            }
        } else {
    
      out.write("\r\n");
      out.write("        <p>Vui lòng chọn ngày chiếu và giờ chiếu hợp lệ.</p>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
