package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import model.PhongChieu303;

public class PhongChieuDao303 extends DAO {

    public PhongChieuDao303() {
        super();
    }

    public List<PhongChieu303> timPhongChieuTrong(String ngayChieu, String gioChieu, int thoiLuongPhim) {
        List<PhongChieu303> danhSachPhongChieu = new ArrayList<>();
        String sql = "SELECT * FROM PhongChieu WHERE id NOT IN (" +
                     "SELECT phongChieuId FROM LichChieu " +
                     "WHERE (ngayChieu = ? AND (? BETWEEN gioChieu AND thoiGianKetThuc OR gioChieu BETWEEN ? AND ?)) " +
                     "OR (ngayChieu = ? AND (? BETWEEN gioChieu AND thoiGianKetThuc OR gioChieu BETWEEN ? AND ?)))";
        try (Connection con = getConnection();
             PreparedStatement ps = con.prepareStatement(sql)) {
            ps.setString(1, ngayChieu);
            ps.setString(2, gioChieu);
            ps.setString(3, gioChieu);
            ps.setString(4, gioChieu);

            // Calculate the end time of the movie
            LocalTime gioChieuTime = LocalTime.parse(gioChieu, DateTimeFormatter.ofPattern("HH:mm"));
            LocalTime thoiGianKetThucTime = gioChieuTime.plus(thoiLuongPhim, ChronoUnit.MINUTES);
            String ngayKetThuc = ngayChieu;
            if (thoiGianKetThucTime.isBefore(gioChieuTime)) {
                ngayKetThuc = LocalDate.parse(ngayChieu).plusDays(1).toString();
            }

            ps.setString(5, ngayKetThuc);
            ps.setString(6, thoiGianKetThucTime.toString());
            ps.setString(7, thoiGianKetThucTime.toString());
            ps.setString(8, thoiGianKetThucTime.toString());

            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    PhongChieu303 phongChieu = new PhongChieu303();
                    phongChieu.setId(rs.getInt("id"));
                    phongChieu.setTenPhong(rs.getString("tenPhong"));
                    danhSachPhongChieu.add(phongChieu);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return danhSachPhongChieu;
    }
}